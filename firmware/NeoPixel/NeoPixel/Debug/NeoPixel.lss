
NeoPixel.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  000001a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000132  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000b4  00803800  00803800  000001a6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000218  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000020d8  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001a6b  00000000  00000000  00002340  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004c9  00000000  00000000  00003dab  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000b4  00000000  00000000  00004274  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f6f  00000000  00000000  00004328  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000246  00000000  00000000  00005297  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  000054dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  6c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  70:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  74:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  78:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	cd bf       	out	0x3d, r28	; 61
  84:	df e3       	ldi	r29, 0x3F	; 63
  86:	de bf       	out	0x3e, r29	; 62

00000088 <__do_clear_bss>:
  88:	28 e3       	ldi	r18, 0x38	; 56
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b8 e3       	ldi	r27, 0x38	; 56
  8e:	01 c0       	rjmp	.+2      	; 0x92 <.do_clear_bss_start>

00000090 <.do_clear_bss_loop>:
  90:	1d 92       	st	X+, r1

00000092 <.do_clear_bss_start>:
  92:	a4 3b       	cpi	r26, 0xB4	; 180
  94:	b2 07       	cpc	r27, r18
  96:	e1 f7       	brne	.-8      	; 0x90 <.do_clear_bss_loop>
  98:	0e 94 8a 00 	call	0x114	; 0x114 <main>
  9c:	0c 94 97 00 	jmp	0x12e	; 0x12e <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <NeoBit>:
		NeoRed[NeoPixel] = NeoRed[NeoPixel + 1];
	}
	NeoGreen[NeoNum - 1] = NeoGreen[0];
	NeoBlue[NeoNum - 1] = NeoBlue[0];
	NeoRed[NeoNum - 1] = NeoRed[0];
}
  a4:	88 23       	and	r24, r24
  a6:	49 f0       	breq	.+18     	; 0xba <NeoBit+0x16>
  a8:	e0 e0       	ldi	r30, 0x00	; 0
  aa:	f4 e0       	ldi	r31, 0x04	; 4
  ac:	82 e0       	ldi	r24, 0x02	; 2
  ae:	85 83       	std	Z+5, r24	; 0x05
  b0:	94 e0       	ldi	r25, 0x04	; 4
  b2:	9a 95       	dec	r25
  b4:	f1 f7       	brne	.-4      	; 0xb2 <NeoBit+0xe>
  b6:	86 83       	std	Z+6, r24	; 0x06
  b8:	08 95       	ret
  ba:	e0 e0       	ldi	r30, 0x00	; 0
  bc:	f4 e0       	ldi	r31, 0x04	; 4
  be:	82 e0       	ldi	r24, 0x02	; 2
  c0:	85 83       	std	Z+5, r24	; 0x05
  c2:	93 e0       	ldi	r25, 0x03	; 3
  c4:	9a 95       	dec	r25
  c6:	f1 f7       	brne	.-4      	; 0xc4 <NeoBit+0x20>
  c8:	86 83       	std	Z+6, r24	; 0x06
  ca:	08 95       	ret

000000cc <NeoInit_all_off>:
  cc:	cf 93       	push	r28
  ce:	df 93       	push	r29
  d0:	ec e3       	ldi	r30, 0x3C	; 60
  d2:	f8 e3       	ldi	r31, 0x38	; 56
  d4:	c8 e7       	ldi	r28, 0x78	; 120
  d6:	d8 e3       	ldi	r29, 0x38	; 56
  d8:	a0 e0       	ldi	r26, 0x00	; 0
  da:	b8 e3       	ldi	r27, 0x38	; 56
  dc:	88 e7       	ldi	r24, 0x78	; 120
  de:	98 e3       	ldi	r25, 0x38	; 56
  e0:	11 92       	st	Z+, r1
  e2:	19 92       	st	Y+, r1
  e4:	1d 92       	st	X+, r1
  e6:	e8 17       	cp	r30, r24
  e8:	f9 07       	cpc	r31, r25
  ea:	d1 f7       	brne	.-12     	; 0xe0 <NeoInit_all_off+0x14>
  ec:	df 91       	pop	r29
  ee:	cf 91       	pop	r28
  f0:	08 95       	ret

000000f2 <NeoDraw>:
  f2:	d0 91 3c 38 	lds	r29, 0x383C	; 0x80383c <NeoGreen>
  f6:	c7 e0       	ldi	r28, 0x07	; 7
  f8:	01 e0       	ldi	r16, 0x01	; 1
  fa:	10 e0       	ldi	r17, 0x00	; 0
  fc:	c8 01       	movw	r24, r16
  fe:	0c 2e       	mov	r0, r28
 100:	02 c0       	rjmp	.+4      	; 0x106 <NeoDraw+0x14>
 102:	88 0f       	add	r24, r24
 104:	99 1f       	adc	r25, r25
 106:	0a 94       	dec	r0
 108:	e2 f7       	brpl	.-8      	; 0x102 <NeoDraw+0x10>
 10a:	8d 23       	and	r24, r29
 10c:	0e 94 52 00 	call	0xa4	; 0xa4 <NeoBit>
 110:	c1 50       	subi	r28, 0x01	; 1
 112:	f4 cf       	rjmp	.-24     	; 0xfc <NeoDraw+0xa>

00000114 <main>:
    // This register is protected and can not be changed until the CPP register in the CPU
    // is written with the signature of 0xD8 ... I think I need to insert some assembly code here
    // This PEN flag is reset, this means that the Source clock is fed right through and not pre-scaled.
    // This needs to be checked for the electrical characteristics is such that the full 5V is required.

    CPU_CCP = CCP_IOREG_gc;
 114:	88 ed       	ldi	r24, 0xD8	; 216
 116:	84 bf       	out	0x34, r24	; 52
    CLKCTRL.MCLKCTRLB = 0x00;
 118:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x700061>

    PORTA.DIR |= 1 << 1;
 11c:	e0 e0       	ldi	r30, 0x00	; 0
 11e:	f4 e0       	ldi	r31, 0x04	; 4
 120:	80 81       	ld	r24, Z
 122:	82 60       	ori	r24, 0x02	; 2
 124:	80 83       	st	Z, r24


	NeoInit_all_off ();
 126:	0e 94 66 00 	call	0xcc	; 0xcc <NeoInit_all_off>
	while(1)
	{
		NeoDraw ();
 12a:	0e 94 79 00 	call	0xf2	; 0xf2 <NeoDraw>

0000012e <_exit>:
 12e:	f8 94       	cli

00000130 <__stop_program>:
 130:	ff cf       	rjmp	.-2      	; 0x130 <__stop_program>
